// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

@mixin clearfix {
  &::after {
    clear: both;
    content: '';
    display: table;
  }
}

@mixin font-awesome($character) {
    content: unquote("\"\\#{$character}\"");
    font-family: FontAwesome;
    line-height: 1;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
}

// When the site is made fully responsive, this rule can be turned to be more
// all-purpose. But presumably, for now, we would want to avoid triggering the
// limited mobile layout unless it's actually desired. Hence the use of an
// extra wrapper class.
@mixin breakpoint-mobile {
    @media (max-width: $breakpoint-mobile) {
        @at-root .is-mobile & {
            @content;
        }
    }
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

// generates arrow
// $direction: N, S, E, W
@mixin arrow($direction, $width, $height, $color) {
    &::before,
    &::after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        margin: auto;
        background: $color;
        transform: rotate(45deg);
        transition: background $default-transition;

        @if $direction == N {
            width: $width;
            height: $height;
            transform-origin: 50% 0;
        }

        @if $direction == S {
            width: $width;
            height: $height;
            transform-origin: 50% 100%;
        }

        @if $direction == E {
            width: $width;
            height: $height;
            transform-origin: 100% 50%;
        }

        @if $direction == W {
            width: $width;
            height: $height;
            transform-origin: 0 50%;
        }
    }

    &::after {
        transform: rotate(-45deg);
    }
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
